#! /usr/bin/env python3
"""
    @Author: Thorsten liepert <thorsten@liepert.dev>
    @Date: 06.09.2024
    @CLicense: MIT
    @Description: A Discord bot that will handle log files generated by a SCUM server
                  and will send various events to discord.
"""
# pylint: disable=global-statement, too-many-branches, too-many-lines, import-error
import os
import sys
import random
import traceback
import gettext
import threading
import time

from datetime import datetime, timedelta
from zoneinfo import ZoneInfo

import discord
from discord.ext import commands
from discord.ext import tasks
from dotenv import load_dotenv

import discord_client

# pylint: disable=wrong-import-position
# sys.path.append('./')
from modules.datamanager import ScumLogDataManager
from modules.logparser import LoginParser, KillParser, BunkerParser, FamepointParser, \
    AdminParser, ChatParser
from modules.sftpconnector import ScumSFTPConnector
from modules.output import Output
from modules.configmanager import ConfigManager
from modules.mytime import mytime
from command.scumconfig import ServerConfig
from command.online import Online
from command.lifetime import Lifetime
from command.players import PlayerMangement
# pylint: enable=wrong-import-position

load_dotenv()
LOG_CHECK_INTERVAL = os.getenv("LOG_CHECK_INTERVAL")

if LOG_CHECK_INTERVAL is None:
    LOG_CHECK_INTERVAL = 60.0
else:
    LOG_CHECK_INTERVAL = float(LOG_CHECK_INTERVAL)

HELP_COMMAND = os.getenv("BOT_HELP_COMMAND")
if HELP_COMMAND is None:
    HELP_COMMAND = "buffi"


WEAPON_LOOKUP = {
    "Compound_Bow_C": "compund bow"
}

MAX_MESSAGE_LENGTH = 1000

def run_client():
    # client.run(config.token)
    discord_client.run_client()

def thread() -> None:
    while True:
        time.sleep(5)
        print("Thread 2 is alive!")


t1 = threading.Thread(target=run_client, name="Discord Bot")
t2 = threading.Thread(target=thread, name="Test")


def main():
    try:
        t1.start()
        t2.start()
    finally:
        t1.join()
        t2.join()

if __name__=='__main__':
    main()
